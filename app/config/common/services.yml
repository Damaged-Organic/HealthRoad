# app/config/common/services.yml
services:
    # Twig

    app.twig_extension:
        class:  AppBundle\Twig\AppExtension
        public: false
        tags:
            - { name: twig.extension }

    # Event listeners

    app.listener.sync.authentication:
        class: AppBundle\EventListener\Sync\SyncAuthenticationListener
        calls:
            - [setManager, [ "@doctrine.orm.entity_manager" ]]
            - [setAuthentication, [ "@app.sync.security.authentication" ]]
        tags:
            - { name: kernel.event_listener, event: kernel.controller, method: onKernelController }

    # Database

    app.repository.global:
        class: AppBundle\Service\Repository\GlobalRepository
        calls:
            - [setConnection, [ "@database_connection" ]]

    # Common

    app.common.breadcrumbs:
        class: AppBundle\Service\Common\Breadcrumbs
        calls:
            - [setRouter, [ "@router" ]]
            - [setTranslator, [ "@translator" ]]

    app.common.messages:
        class: AppBundle\Service\Common\Messages
        calls:
            - [setSession, [ "@session" ]]
            - [setTranslator, [ "@translator" ]]

    app.common.mailer_shortcut:
        class: AppBundle\Service\Common\MailerShortcut
        calls:
            - [setMailer, [ "@mailer" ]]

    # Validators

    app.validator.uploaded_product_image:
        class: AppBundle\Service\Validator\UploadedProductImageValidator
        calls:
            - [setValidator, [ "@validator" ]]
            - [setTranslator, [ "@translator" ]]

    # Security voters

    app.security.role_hierarchy:
        alias: security.role_hierarchy

    app.voter_setting:
        class:  AppBundle\Security\Authorization\Voter\SettingVoter
        public: false
        calls:
            - [setRoleHierarchy, [ "@app.security.role_hierarchy" ]]
        tags:
            - { name: security.voter }

    app.voter_employee:
        class:  AppBundle\Security\Authorization\Voter\EmployeeVoter
        public: false
        calls:
            - [setRoleHierarchy, [ "@app.security.role_hierarchy" ]]
        tags:
            - { name: security.voter }

    app.voter_region:
        class:  AppBundle\Security\Authorization\Voter\RegionVoter
        public: false
        calls:
            - [setRoleHierarchy, [ "@app.security.role_hierarchy" ]]
        tags:
            - { name: security.voter }

    app.voter_settlement:
        class:  AppBundle\Security\Authorization\Voter\SettlementVoter
        public: false
        calls:
            - [setRoleHierarchy, [ "@app.security.role_hierarchy" ]]
        tags:
            - { name: security.voter }

    app.voter_school:
        class:  AppBundle\Security\Authorization\Voter\SchoolVoter
        public: false
        calls:
            - [setRoleHierarchy, [ "@app.security.role_hierarchy" ]]
        tags:
            - { name: security.voter }

    app.voter_vending_machine:
        class:  AppBundle\Security\Authorization\Voter\VendingMachineVoter
        public: false
        calls:
            - [setRoleHierarchy, [ "@app.security.role_hierarchy" ]]
        tags:
            - { name: security.voter }

    app.voter_nfc_tag:
        class:  AppBundle\Security\Authorization\Voter\NfcTagVoter
        public: false
        calls:
            - [setRoleHierarchy, [ "@app.security.role_hierarchy" ]]
        tags:
            - { name: security.voter }

    app.voter_supplier:
        class:  AppBundle\Security\Authorization\Voter\SupplierVoter
        public: false
        calls:
            - [setRoleHierarchy, [ "@app.security.role_hierarchy" ]]
        tags:
            - { name: security.voter }

    app.voter_product:
        class:  AppBundle\Security\Authorization\Voter\ProductVoter
        public: false
        calls:
            - [setRoleHierarchy, [ "@app.security.role_hierarchy" ]]
        tags:
            - { name: security.voter }

    app.voter_product_vending_group:
        class:  AppBundle\Security\Authorization\Voter\ProductVendingGroupVoter
        public: false
        calls:
            - [setRoleHierarchy, [ "@app.security.role_hierarchy" ]]
        tags:
            - { name: security.voter }

    app.voter_customer:
        class:  AppBundle\Security\Authorization\Voter\CustomerVoter
        public: false
        calls:
            - [setRoleHierarchy, [ "@app.security.role_hierarchy" ]]
        tags:
            - { name: security.voter }

    app.voter_student:
        class:  AppBundle\Security\Authorization\Voter\StudentVoter
        public: false
        calls:
            - [setRoleHierarchy, [ "@app.security.role_hierarchy" ]]
        tags:
            - { name: security.voter }

    app.voter_purchase:
        class:  AppBundle\Security\Authorization\Voter\PurchaseVoter
        public: false
        calls:
            - [setRoleHierarchy, [ "@app.security.role_hierarchy" ]]
        tags:
            - { name: security.voter }

    # Security services

    app.security.setting_boundless_access:
        class: AppBundle\Service\Security\SettingBoundlessAccess
        calls:
            - [setAuthorizationChecker, [ "@security.authorization_checker" ]]

    app.security.employee_boundless_access:
        class: AppBundle\Service\Security\EmployeeBoundlessAccess
        calls:
            - [setAuthorizationChecker, [ "@security.authorization_checker" ]]

    app.security.region_boundless_access:
        class: AppBundle\Service\Security\RegionBoundlessAccess
        calls:
            - [setAuthorizationChecker, [ "@security.authorization_checker" ]]

    app.security.settlement_boundless_access:
        class: AppBundle\Service\Security\SettlementBoundlessAccess
        calls:
            - [setAuthorizationChecker, [ "@security.authorization_checker" ]]

    app.security.school_boundless_access:
        class: AppBundle\Service\Security\SchoolBoundlessAccess
        calls:
            - [setAuthorizationChecker, [ "@security.authorization_checker" ]]

    app.security.vending_machine_boundless_access:
        class: AppBundle\Service\Security\VendingMachineBoundlessAccess
        calls:
            - [setAuthorizationChecker, [ "@security.authorization_checker" ]]

    app.security.vending_machine_event_boundless_access:
        class: AppBundle\Service\Security\VendingMachineEventBoundlessAccess
        calls:
            - [setAuthorizationChecker, [ "@security.authorization_checker" ]]

    app.security.vending_machine_load_boundless_access:
        class: AppBundle\Service\Security\VendingMachineLoadBoundlessAccess
        calls:
            - [setAuthorizationChecker, [ "@security.authorization_checker" ]]

    app.security.nfc_tag_boundless_access:
        class: AppBundle\Service\Security\NfcTagBoundlessAccess
        calls:
            - [setAuthorizationChecker, [ "@security.authorization_checker" ]]

    app.security.supplier_boundless_access:
        class: AppBundle\Service\Security\SupplierBoundlessAccess
        calls:
            - [setAuthorizationChecker, [ "@security.authorization_checker" ]]

    app.security.product_boundless_access:
        class: AppBundle\Service\Security\ProductBoundlessAccess
        calls:
            - [setAuthorizationChecker, [ "@security.authorization_checker" ]]

    app.security.product_vending_group_boundless_access:
        class: AppBundle\Service\Security\ProductVendingGroupBoundlessAccess
        calls:
            - [setAuthorizationChecker, [ "@security.authorization_checker" ]]

    app.security.customer_boundless_access:
        class: AppBundle\Service\Security\CustomerBoundlessAccess
        calls:
            - [setAuthorizationChecker, [ "@security.authorization_checker" ]]

    app.security.student_boundless_access:
        class: AppBundle\Service\Security\StudentBoundlessAccess
        calls:
            - [setAuthorizationChecker, [ "@security.authorization_checker" ]]

    app.security.purchase_boundless_access:
        class: AppBundle\Service\Security\PurchaseBoundlessAccess
        calls:
            - [setAuthorizationChecker, [ "@security.authorization_checker" ]]

    # Sync

    app.sync.utility.checksum:
        class: AppBundle\Service\Sync\Utility\Checksum

    app.sync.sync_data_validator:
        class: AppBundle\Service\Sync\SyncDataValidator
        calls:
            - [setManager, [ "@doctrine.orm.entity_manager" ]]
            - [setValidator, [ "@validator" ]]
            - [setChecksum, [ "@app.sync.utility.checksum" ]]

    app.sync.sync_data_handler:
        class: AppBundle\Service\Sync\SyncDataHandler
        calls:
            - [setManager, [ "@doctrine.orm.entity_manager" ]]

    app.sync.sync_data_builder:
        class: AppBundle\Service\Sync\SyncDataBuilder
        calls:
            - [setChecksum, [ "@app.sync.utility.checksum" ]]

    app.sync.sync_data_recorder:
        class: AppBundle\Service\Sync\SyncDataRecorder
        calls:
            - [setManager, [ "@doctrine.orm.entity_manager" ]]

    app.sync.security.password_encoder:
        class: AppBundle\Service\Sync\Security\PasswordEncoder

    app.sync.security.authentication:
        class: AppBundle\Service\Sync\Security\Authentication
        calls:
            - [setPasswordEncoder, [ "@app.sync.security.password_encoder" ]]

    # Reports

    app.report.builder:
        class: AppBundle\Service\Report\ReportBuilder
        calls:
            - [setManager, [ "@doctrine.orm.entity_manager" ]]

    app.report.excel.accounting:
        class: AppBundle\Service\Report\ReportExcelAccounting
        calls:
            - [setRootDirectory, [ "%kernel.root_dir%" ]]
            - [setPhpExcel, [ "@phpexcel" ]]

    app.report.excel.logistics:
        class: AppBundle\Service\Report\ReportExcelLogistics
        calls:
            - [setRootDirectory, [ "%kernel.root_dir%" ]]
            - [setPhpExcel, [ "@phpexcel" ]]

    app.report.mailer:
        class: AppBundle\Service\Report\ReportMailer
        calls:
            - [setManager, [ "@doctrine.orm.entity_manager" ]]
            - [setMailerShortcut, [ "@app.common.mailer_shortcut" ]]
            - [setEmailParameters, [ "%emails%" ]]